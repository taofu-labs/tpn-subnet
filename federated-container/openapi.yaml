openapi: 3.1.0
info:
  title: TPN Network Federated API
  version: 1.0.15
  description: |
    Public HTTP API exposed by the TPN Network federated container. The routes
    documented here are mounted under `/api` and cover live lease negotiation and
    network telemetry.
servers:
  - url: http://161.35.91.172:3000
    description: Choose any Subnet 65 validator. See https://taostats.io/subnets/65/chart to find current validators.
tags:
  - name: Lease
    description: Lease orchestration endpoints for miners, validators, and workers.
  - name: Stats
    description: Cluster statistics and cache-backed status data.
  - name: Workers
    description: Worker performance analytics exposed in miner mode.
paths:
  /api/lease/new:
    get:
      tags: [Lease]
      summary: Request a new worker lease
      description: |
        Returns a WireGuard configuration for the next available worker. Responses can be
        a structured JSON object or a ready-to-use WireGuard profile in plain text, based
        on the requested `format`.
      parameters:
        - name: lease_seconds
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: Requested lease duration in seconds.
        - name: format
          in: query
          schema:
            type: string
            enum: [json, text]
            default: json
          description:
            Response format. `text` returns a WireGuard config file; `json`
            returns structured metadata.
        - name: geo
          in: query
          schema:
            type: string
            description:
              ISO 3166-1 alpha-2 code (case-insensitive) or `ANY` for the next
              available region.
          description: Preferred worker geography. Falls back to `ANY` when omitted.
        - name: whitelist
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: ipv4
          description: Comma separated IPv4 addresses that should always be allowed.
        - name: blacklist
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: ipv4
          description: Comma separated IPv4 addresses that must be blocked.
        - name: priority
          in: query
          schema:
            type: boolean
            default: false
          description: Request a high-priority lease when supported by the current run mode.
      responses:
        "200":
          description: Successfully allocated worker configuration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeaseConfig"
              examples:
                jsonConfig:
                  summary: WireGuard config as JSON
                  value:
                    interface:
                      Address: 10.13.13.160/32
                      PrivateKey: EXAMPLEcL1qN8Qy0HPc9z1u5BhkgxP+0IV7PP85AvK=
                      ListenPort: 51820
                      DNS: 10.13.13.1
                    peer:
                      PublicKey: EXAMPLE8YlYOqEacern4rjTrS89yJAe89z5i+VyOC9hS9fc=
                      PresharedKey: EXAMPLEStc9UjIPjcOVSA5iB8cANSv+ZxZKf2OLP71gkikc=
                      AllowedIPs: 0.0.0.0/0
                      Endpoint: 198.51.100.42:51820
            text/plain:
              schema:
                type: string
              examples:
                wireguardProfile:
                  summary: WireGuard config as plain text
                  value: |-
                    [Interface]
                    Address = 10.13.13.187/32
                    PrivateKey = EXAMPLEACZgwFvmkdxVDLBX0bS60vJhN8IUMUTTlKv3lcuNUkY=
                    ListenPort = 51820
                    DNS = 10.13.13.1

                    [Peer]
                    PublicKey = EXAMPLE5WUNRNX1Iz2O8bcLOHoxFkWY4E3K8Qpe1ZOydQTZuiM=
                    PresharedKey = EXAMPLE5sEDGxRoAkpzXibnCCLpSkhV3BNGIaH5XJDKiIG79OY=
                    AllowedIPs = 0.0.0.0/0
                    Endpoint = 203.0.113.54:51820
        "500":
          $ref: "#/components/responses/InternalError"
  /api/lease/countries:
    get:
      tags: [Lease]
      summary: List available worker countries
      description: Returns supported worker geographies as ISO codes or human readable names.
      parameters:
        - name: format
          in: query
          schema:
            type: string
            enum: [json, text]
            default: json
          description:
            Response format. `json` returns an array; `text` returns newline
            separated values.
        - name: type
          in: query
          schema:
            type: string
            enum: [code, name]
            default: code
          description: Select between ISO country codes and localized names.
      responses:
        "200":
          description: Country list resolved from the worker pool.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountryList"
              examples:
                isoCodes:
                  summary: ISO country codes
                  value: ["RU", "DK", "PY", "SI"]
                countryNames:
                  summary: Country names
                  value: ["Russia", "Denmark", "Paraguay", "Slovenia"]
            text/plain:
              schema:
                type: string
              examples:
                isoCodesText:
                  summary: ISO country codes (newline separated)
                  value: |-
                    RU
                    DK
                    PY
                    SI
                countryNamesText:
                  summary: Country names (newline separated)
                  value: |-
                    Russia
                    Denmark
                    Paraguay
                    Slovenia
        "500":
          $ref: "#/components/responses/InternalError"
  /api/stats:
    get:
      tags: [Stats]
      summary: Fetch cached network statistics
      description: Returns the cached run mode, country distribution, and worker IP mappings.
      responses:
        "200":
          description: Statistics snapshot of the currently running node.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
              example:
                mode: validator
                country_count:
                  US: 7
                  NL: 6
                  FR: 5
                country_code_to_ips:
                  US:
                    - 178.128.6.96
                    - 138.197.37.170
                  NL:
                    - 64.227.71.160
                miner_uid_to_ip:
                  "1": 185.237.185.222
                  "2": 38.165.233.70
        "500":
          $ref: "#/components/responses/InternalError"
  /api/worker_performance:
    get:
      tags: [Workers]
      summary: Retrieve worker performance metrics
      description: |
        Provides uptime and reward share data for workers observed by the miner. Access is
        restricted to miner mode and may require an administrator API key. Results can be
        grouped by worker IP or aggregated by payout address.
      parameters:
        - name: history_days
          in: query
          schema:
            type: integer
            minimum: 1
            default: 7
          description: Rolling window in days. Ignored when `from` or `to` are provided.
        - name: from
          in: query
          schema:
            anyOf:
              - type: integer
                description: Unix timestamp in milliseconds.
              - type: string
                format: date-time
          description: Start of the window. Overrides `history_days` when supplied.
        - name: to
          in: query
          schema:
            anyOf:
              - type: integer
                description: Unix timestamp in milliseconds.
              - type: string
                format: date-time
          description: End of the window. Overrides `history_days` when supplied.
        - name: format
          in: query
          schema:
            type: string
            enum: [json, csv]
            default: json
          description: Response format. CSV output is returned as plain text.
        - name: api_key
          in: query
          schema:
            type: string
          description: Required when `ADMIN_API_KEY` is configured on the miner.
        - name: group_by
          in: query
          schema:
            type: string
            enum: [ip, payment_address_evm, payment_address_bittensor]
            default: ip
          description: Grouping strategy for payment fraction calculations.
      responses:
        "200":
          description: Worker metrics returned in the requested format.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/WorkerPerformanceByIp"
                  - $ref: "#/components/schemas/WorkerPerformanceByPaymentAddressEvm"
                  - $ref: "#/components/schemas/WorkerPerformanceByPaymentAddressBittensor"
              examples:
                byIp:
                  summary: Grouped by worker IP
                  value:
                    - ip: 198.51.100.10
                      up: 95
                      down: 3
                      unknown: 2
                      uptime: 95.0
                      payment_fraction: 0.0425
                      payment_address_evm: 0xExampleAddress
                      payment_address_bittensor: bittensorExample
                      from: 1727740800000
                      to: 1728345600000
                      from_human: 2024-10-01T00:00:00.000Z
                      to_human: 2024-10-08T00:00:00.000Z
                      total_workers: 120
                    - ip: 203.0.113.77
                      up: 90
                      down: 8
                      unknown: 2
                      uptime: 90.0
                      payment_fraction: 0.0333
                      payment_address_evm: 0xAnotherExample
                      payment_address_bittensor: bittensorAnother
                      from: 1727740800000
                      to: 1728345600000
                      from_human: 2024-10-01T00:00:00.000Z
                      to_human: 2024-10-08T00:00:00.000Z
                      total_workers: 120
                byPaymentAddressEvm:
                  summary: Grouped by EVM payment address
                  value:
                    - payment_address_evm: 0xExampleAddress
                      payment_fraction: 0.125
                    - payment_address_evm: 0xAnotherExample
                      payment_fraction: 0.083
                byPaymentAddressBittensor:
                  summary: Grouped by Bittensor payment address
                  value:
                    - payment_address_bittensor: bittensorExample
                      payment_fraction: 0.19
            text/csv:
              schema:
                type: string
              example: |-
                ip,payment_fraction,up,down,unknown,uptime
                198.51.100.10,0.0425,95,3,2,95.0
                203.0.113.77,0.0333,90,8,2,90.0
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalError"
components:
  schemas:
    LeaseConfig:
      type: object
      required: [interface, peer]
      properties:
        interface:
          type: object
          required: [Address, PrivateKey, ListenPort, DNS]
          properties:
            Address:
              type: string
              description: Worker tunnel address in CIDR notation.
            PrivateKey:
              type: string
              description: WireGuard private key for the client interface.
            ListenPort:
              type: integer
              description: Local WireGuard port.
            DNS:
              type: string
              description: Internal DNS resolver address.
        peer:
          type: object
          required: [PublicKey, PresharedKey, AllowedIPs, Endpoint]
          properties:
            PublicKey:
              type: string
              description: WireGuard public key of the remote peer.
            PresharedKey:
              type: string
              description: Optional WireGuard preshared key for additional security.
            AllowedIPs:
              type: string
              description: Route(s) announced by the peer.
            Endpoint:
              type: string
              description: Remote WireGuard endpoint in `host:port` format.
    CountryList:
      type: array
      items:
        type: string
        description: ISO 3166-1 alpha-2 code or localized country name, depending on the response `type` parameter.
      description: Ordered list of supported worker geographies.
    StatsResponse:
      type: object
      required: [mode, country_count, country_code_to_ips]
      properties:
        mode:
          type: string
          description: Current run mode for the node (validator, miner, worker, etc.).
        country_count:
          type: object
          additionalProperties:
            type: integer
          description: Count of workers per ISO country code.
        country_code_to_ips:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
              format: ipv4
              description: Public ingress IP address for a worker registered under the keyed country.
          description: Map of ISO country codes to worker ingress IPs.
        miner_uid_to_ip:
          type: object
          nullable: true
          additionalProperties:
            type: string
            format: ipv4
          description: Present in validator mode, maps miner UIDs to their public IPs.
    WorkerPerformanceEntry:
      type: object
      required:
        - ip
        - up
        - down
        - unknown
        - uptime
        - payment_fraction
        - from
        - to
        - from_human
        - to_human
        - total_workers
      additionalProperties: true
      properties:
        ip:
          type: string
          format: ipv4
        up:
          type: integer
          minimum: 0
        down:
          type: integer
          minimum: 0
        unknown:
          type: integer
          minimum: 0
        uptime:
          type: number
          format: float
          description: Percentage (0-100) of healthy observations.
        payment_fraction:
          type: number
          format: float
          description: Fraction of the reward pool assigned to the worker.
        payment_address_evm:
          type: string
          description: Optional EVM payout address registered for the worker.
        payment_address_bittensor:
          type: string
          description: Optional Bittensor payout address registered for the worker.
        from:
          type: integer
          description: Window start (Unix epoch in milliseconds).
        to:
          type: integer
          description: Window end (Unix epoch in milliseconds).
        from_human:
          type: string
          format: date-time
        to_human:
          type: string
          format: date-time
        total_workers:
          type: integer
          description: Total number of workers considered in the dataset.
    WorkerPerformanceByIp:
      type: array
      items:
        $ref: "#/components/schemas/WorkerPerformanceEntry"
    WorkerPerformancePaymentByEvm:
      type: object
      required: [payment_address_evm, payment_fraction]
      properties:
        payment_address_evm:
          type: string
          description: Checksummed EVM address receiving the aggregated reward share.
        payment_fraction:
          type: number
          format: float
          description: Portion of the miner reward pool assigned to the address (0-1).
    WorkerPerformancePaymentByBittensor:
      type: object
      required: [payment_address_bittensor, payment_fraction]
      properties:
        payment_address_bittensor:
          type: string
          description: Registered Bittensor wallet that accrues rewards for one or more workers.
        payment_fraction:
          type: number
          format: float
          description: Portion of the miner reward pool assigned to the wallet (0-1).
    WorkerPerformanceByPaymentAddressEvm:
      type: array
      items:
        $ref: "#/components/schemas/WorkerPerformancePaymentByEvm"
    WorkerPerformanceByPaymentAddressBittensor:
      type: array
      items:
        $ref: "#/components/schemas/WorkerPerformancePaymentByBittensor"
    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: string
  responses:
    InternalError:
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "Error handling new lease route: Worker does not accept lease requests from 192.0.2.10"
    Forbidden:
      description: Access denied for the requested operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Performance data is only available in miner mode
    BadRequest:
      description: Invalid request parameters supplied.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: Invalid 'from' date
